//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/New Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Assets.Scripts
{
    public partial class @InputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""New Controls"",
    ""maps"": [
        {
            ""name"": ""Android"",
            ""id"": ""e918f071-0a0e-4b4b-9a15-08fe9e2f174d"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6c4978a6-ef0c-416c-88e9-b07d6f1bd6da"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch"",
                    ""type"": ""Button"",
                    ""id"": ""4b67ca14-292b-4007-8413-500041c4310c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""f0691a93-d09b-46cf-b447-8dd0ba75d993"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8b157a84-ef6c-47e7-b83a-a084d268ffa3"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6823d99f-f349-458a-8eb7-c2edc936b4eb"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""186ca95b-b44a-4e44-822f-e9223a4f5eb3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d875a3d-8605-431b-a4cf-39a9cdf6c01b"",
                    ""path"": ""*/{Back}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Android
            m_Android = asset.FindActionMap("Android", throwIfNotFound: true);
            m_Android_Position = m_Android.FindAction("Position", throwIfNotFound: true);
            m_Android_Touch = m_Android.FindAction("Touch", throwIfNotFound: true);
            m_Android_Back = m_Android.FindAction("Back", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Android
        private readonly InputActionMap m_Android;
        private IAndroidActions m_AndroidActionsCallbackInterface;
        private readonly InputAction m_Android_Position;
        private readonly InputAction m_Android_Touch;
        private readonly InputAction m_Android_Back;
        public struct AndroidActions
        {
            private @InputActions m_Wrapper;
            public AndroidActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_Android_Position;
            public InputAction @Touch => m_Wrapper.m_Android_Touch;
            public InputAction @Back => m_Wrapper.m_Android_Back;
            public InputActionMap Get() { return m_Wrapper.m_Android; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(AndroidActions set) { return set.Get(); }
            public void SetCallbacks(IAndroidActions instance)
            {
                if (m_Wrapper.m_AndroidActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_AndroidActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_AndroidActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_AndroidActionsCallbackInterface.OnPosition;
                    @Touch.started -= m_Wrapper.m_AndroidActionsCallbackInterface.OnTouch;
                    @Touch.performed -= m_Wrapper.m_AndroidActionsCallbackInterface.OnTouch;
                    @Touch.canceled -= m_Wrapper.m_AndroidActionsCallbackInterface.OnTouch;
                    @Back.started -= m_Wrapper.m_AndroidActionsCallbackInterface.OnBack;
                    @Back.performed -= m_Wrapper.m_AndroidActionsCallbackInterface.OnBack;
                    @Back.canceled -= m_Wrapper.m_AndroidActionsCallbackInterface.OnBack;
                }
                m_Wrapper.m_AndroidActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Touch.started += instance.OnTouch;
                    @Touch.performed += instance.OnTouch;
                    @Touch.canceled += instance.OnTouch;
                    @Back.started += instance.OnBack;
                    @Back.performed += instance.OnBack;
                    @Back.canceled += instance.OnBack;
                }
            }
        }
        public AndroidActions @Android => new AndroidActions(this);
        public interface IAndroidActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnTouch(InputAction.CallbackContext context);
            void OnBack(InputAction.CallbackContext context);
        }
    }
}
